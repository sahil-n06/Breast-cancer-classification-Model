# -*- coding: utf-8 -*-
"""breast_cancer_classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/sahil-n06/Breast-cancer-classification-Model/blob/main/breast_cancer_classification.ipynb
"""

import pandas as pd
import numpy as np
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

breast_cancer=load_breast_cancer();
df=pd.DataFrame(data=breast_cancer.data, columns=breast_cancer.feature_names)
df['target']=breast_cancer.target
df

df.info()

df.columns

df.describe()

df.isnull().sum()

duplicates = df.duplicated()
df.dropna(axis=1, inplace=True)

df = df.drop_duplicates()



import matplotlib.pyplot as plt
import seaborn as sns

correlation_matrix = df.corr()

plt.figure(figsize=(20, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()

x = df.drop('target', axis=1)
y = df['target']

x.columns

x_train, x_test, y_train, y_test=train_test_split(x, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(x_train, y_train)

y_pred=model.predict(x_test)

comparison_df = pd.DataFrame({'Actual result': y_test, 'Predicted result': y_pred})
comparison_df

testing_accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f"Testing Accuracy: {testing_accuracy:.2f}")
print("Confusion Matrix:")
print(conf_matrix)
print("Classification Report:")
print(class_report)

